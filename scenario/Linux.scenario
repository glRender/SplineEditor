[default]
    try:
        if len(dockerImage) == 0: raise
    except: dockerImage="sogimu/astralinux:1.11.9"

    def splitDockerImageName(dockerImage):
        def extractNameAndTag(imageNameAndTag):
            imageName_tag = imageNameAndTag.split(":")
            if len(imageName_tag) == 2:
                return imageName_tag[0], imageName_tag[1]
            else:
                return imageName_tag[0], None

        dockerUser = None
        dockerImageName = None
        dockerImageTag = None

        user_imageNameAndTag = dockerImage.split("/")
        if len(user_imageNameAndTag) == 2:
            dockerUser = user_imageNameAndTag[0]
            dockerImageName, dockerImageTag = extractNameAndTag(user_imageNameAndTag[1])
        else:
            dockerImageName, dockerImageTag = extractNameAndTag(user_imageNameAndTag[0])

        return dockerUser, dockerImageName, dockerImageTag

    dockerUser, dockerImageName, dockerImageTag = splitDockerImageName(dockerImage)

    # Не обходимо перенести этот кусок в цель in_container. Для этого необходимо решить вопрос с передачей текста вызова цели с параметрами как члены массива
    f=open("Dockerfile","w")
    f.write("""FROM %s
    ADD scenario/ /scenario/
    WORKDIR /
    RUN apt-get update && \\
    apt-get install -y python wget sudo && \\
    adduser root sudo && \\
    cd /tmp && \\
    wget https://bootstrap.pypa.io/get-pip.py && \\
    python get-pip.py --force-reinstall && \\
    cd / && \\
    pip install -U build_scenarist && \\
    scenarist.py run install_deps:osName=%s """ % (dockerImage, dockerImageName+'-'+dockerImageTag))
    f.close()

    runShell("sudo docker pull %s" % dockerImage)
    runShell("sudo docker build -t %s-dev ." % dockerImage)

    runShell("""
        sudo docker run --rm -v %s:/repo %s-dev bash -cex '
            cd /repo
            pip install -U build_scenarist
            scenarist.py info
            scenarist.py run clean build
        '
        """ % (os.getcwd(), dockerImage))

[install_deps]
    try: osName
    except:
        raise Exception("Необходимо ввести имя целевой ОС!")

    perositoryFilePath = "/etc/apt/sources.list.d/sogimu.fvds.ru_glRender_%s.list" % osName
    if not exists(perositoryFilePath):
        with open(perositoryFilePath, 'a') as repo_file:
            repo_file.write("deb http://sogimu.fvds.ru/glRender/%s/ ./\n" % osName)
    runShell("sudo apt-get update")
    runShell("sudo apt-get install -y --force-yes git cmake build-essential qt5-default libxmu-dev libxi-dev glrender")

[clean]
    if exists("./build"):
        import shutil
        shutil.rmtree("./build")

[build]
    if not exists("./build"):
        makedirs("./build")
    with cd("./build"):
        runShell("cmake ..")

        runShell("make")